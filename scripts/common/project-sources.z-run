#!/dev/null


<< sources / grep / codes / duplicate
	#! <bash+>
	Z_expect_no_arguments
	_patterns=(
			'\{[0-9a-f]{8}\}'  '\[[0-9a-f]{8}\]'  '0x[0-9a-f]{8}(?=[^0-9a-f]|$)'
			'\{[0-9a-f]{16}\}' '\[[0-9a-f]{16}\]' '0x[0-9a-f]{16}(?=[^0-9a-f]|$)'
			'\{[0-9a-f]{32}\}' '\[[0-9a-f]{32}\]' '0x[0-9a-f]{32}(?=[^0-9a-f]|$)'
		)
	_sources=(
			"${_RUST_SOURCES}"
			"${_EXAMPLE_SOURCES:-/dev/null}"
		)
	for _pattern in "${_patterns[@]}" ; do
		grep -h -o -i -P -e "${_pattern}" -r -- "${_sources[@]}" || true
	done \
	| sort \
	| uniq -d \
	| while read -r -- _token ; do
		grep -F -e "${_token}" --color -H -n -r -- "${_sources[@]}"
	done
!!


<< sources / grep / codes / invalid
	#! <bash+>
	Z_expect_no_arguments
	test "${#}" -eq 0
	_patterns=(
			'\{[0-9a-f]{1,7}\}'   '\[[0-9a-f]{1,7}\]'   '0x[0-9a-f]{1,7}(?=[^0-9a-f]|$)'
			'\{[0-9a-f]{9,15}\}'  '\[[0-9a-f]{9,15}\]'  '0x[0-9a-f]{9,15}(?=[^0-9a-f]|$)'
			'\{[0-9a-f]{17,31}\}' '\[[0-9a-f]{17,31}\]' '0x[0-9a-f]{17,31}(?=[^0-9a-f]|$)'
		)
	_sources=(
			"${_RUST_SOURCES}"
			"${_EXAMPLE_SOURCES:-/dev/null}"
		)
	for _pattern in "${_patterns[@]}" ; do
		grep -h -o -i -P -e "${_pattern}" -r -- "${_sources[@]}" || true
	done \
	| sort \
	| while read -r -- _token ; do
		grep -F -e "${_token}" --color -H -n -r -- "${_sources[@]}"
	done
!!

